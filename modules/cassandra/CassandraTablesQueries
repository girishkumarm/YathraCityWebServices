//To create a keyspace execute the following code in cassandra
CREATE KEYSPACE yathra
WITH REPLICATION = { 'class' : 'SimpleStrategy', 'replication_factor' : 1 };


//user table
use yathra;
CREATE TABLE Users(
user_account_id text,
user_name text,
password text,
phone_number text,
PRIMARY KEY (user_account_id) )
WITH compression = { 'sstable_compression' : 'LZ4Compressor', 'chunk_length_kb' : '64' } 
AND compaction = { 'class' : 'LeveledCompactionStrategy', 'sstable_size_in_mb' : '160' } 
AND speculative_retry = '100ms' 
AND bloom_filter_fp_chance = 0.1 
AND caching = 'keys_only';

//otp table
CREATE TABLE otps(
otp text,
phone_number text,
PRIMARY KEY (phone_number) )
WITH compression = { 'sstable_compression' : 'LZ4Compressor', 'chunk_length_kb' : '64' } 
AND compaction = { 'class' : 'LeveledCompactionStrategy', 'sstable_size_in_mb' : '160' } 
AND speculative_retry = '100ms' 
AND bloom_filter_fp_chance = 0.1 
AND caching = 'keys_only';

INSERT INTO otps (otp, phone_number) VALUES ('OTP','PHONE_NUMBER') USING TTL 300;

//car table
CREATE TABLE cars(
car_availability boolean,
car_registered boolean,
car_number text,
car_name text,
car_registered_at text,
car_capacity int,
car_type text,
price_per_kilometer int,
car_model text,
minimun_distance_per_day int,
car_driver_licence text,
PRIMARY KEY ((car_registered_at,car_type),car_number ))
WITH compression = { 'sstable_compression' : 'LZ4Compressor', 'chunk_length_kb' : '64' } 
AND compaction = { 'class' : 'LeveledCompactionStrategy', 'sstable_size_in_mb' : '160' } 
AND speculative_retry = '100ms' 
AND bloom_filter_fp_chance = 0.1 
AND caching = 'keys_only';

CREATE INDEX is_car_driver_licence ON yathra.cars( car_driver_licence);
CREATE INDEX is_car_driver_avaliablity ON yathra.cars( car_availability);
CREATE INDEX is_car_registered_index ON yathra.cars( car_registered);

//creates the table for keeping the booking record
CREATE TABLE booking_details(
booking_id text,
from_date text,
to_date text,
pickup_city text,
travelling_city text,
car_number text,
car_agency_name text,
car_agency_number text,
driver_name text,
driver_phone_numb text,
customer_phone_number text,
coupon text,
customer_name text,
customer_email text,
address text,
car_type text,
car_location text,
booking_confirmed boolean,
PRIMARY KEY ((from_date),customer_phone_number,car_number))
WITH compression = { 'sstable_compression' : 'LZ4Compressor', 'chunk_length_kb' : '64' } 
AND compaction = { 'class' : 'LeveledCompactionStrategy', 'sstable_size_in_mb' : '160' } 
AND speculative_retry = '100ms' 
AND bloom_filter_fp_chance = 0.1 
AND caching = 'keys_only';



//driver table
CREATE TABLE driver_details(
driver_phone_number text,
driver_licence text,
driver_name text,
agency_name text,
agency_phone_number text,
driver_avaliablity boolean,
location text,
car_number text,
car_type text,
PRIMARY KEY ((car_number,location),driver_licence))
WITH compression = { 'sstable_compression' : 'LZ4Compressor', 'chunk_length_kb' : '64' } 
AND compaction = { 'class' : 'LeveledCompactionStrategy', 'sstable_size_in_mb' : '160' } 
AND speculative_retry = '100ms' 
AND bloom_filter_fp_chance = 0.1 
AND caching = 'keys_only';

//Create indexes for the uuid
CREATE INDEX uuid_for_driver ON yathra.driver_details( uuid);

CREATE TABLE counter_table( counter_value counter, url text,primary key(url) );

CREATE TABLE coupen_details( coupen_name text,valid_from text,valid_to text,primary key(coupen_name,valid_to));